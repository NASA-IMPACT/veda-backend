name: Pre-Production - Test, and Deploy Workflow from Veda-Deploy

inputs:
  env_aws_secret_name:
    required: true
    type: string
  dir:
    required: false
    type: string
    default: "."

runs:
  using: "composite"
  steps:

    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Setup Node
      uses: actions/setup-node@v3
      with: 
        node-version: 17

    - uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      
    - name: Install CDK
      shell: bash
      run: npm install -g aws-cdk@2
    
    - uses: actions/cache@v3
      with:
        path: ${{ env.pythonLocation }}
        key:  ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}

    - name: Install python dependencies
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[dev,deploy,test] 

    - name: Launch services
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: docker compose up --build -d

    - name: Ingest Stac Items/Collection
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: |
        ./scripts/load-data-container.sh

    - name: Sleep for 10 seconds
      run: sleep 10s
      shell: bash
      working-directory: ${{ inputs.dir }}

    - name: Integrations tests
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: python -m pytest .github/workflows/tests/ -vv -s

    - name: Stop services
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: |
        docker compose down --rmi all --volumes
        rm -rf .pgdata

    - name: Get dev environment configuration for develop branch
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: ./scripts/get-env.sh ${{ inputs.env_aws_secret_name }}

    - name: Deploy
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: |
        echo $STAGE
        cdk deploy --require-approval never
