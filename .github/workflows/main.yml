name: Main - Lint, Test, and Deploy Workflow

on:
  push:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
    
      - uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key:  ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e  .[dev,deploy,test]

      - name: Run pre-commit
        run: pre-commit run --all-files
    
  test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key:  ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev,deploy,test] 

      - name: Launch services
        run: AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}} docker compose up --build -d

      - name: Ingest Stac Items/Collection
        run: |
          ./scripts/load-data-container.sh

      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash
  
      - name: Integrations tests
        run: python -m pytest .github/workflows/tests/ -vv -s

      - name: Stop services
        run: docker compose stop

  deploy: 
    needs: [test]

    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Setup Node
        uses: actions/setup-node@v1
        with: 
          node-version: 17
      
      - name: Configure awscli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install CDK
        run: npm install -g aws-cdk@2
      
      - uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key:  ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
      
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev,deploy,test] 

      - name: Get dev environment configuration for staging branch
        run: ./scripts/get-env.sh "veda-backend-uah-staging-env"

      - name: Deploy 
        run: |
          echo $STAGE
          cdk deploy --require-approval never

  release:
    needs: [deploy]
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Python Semantic Release
      uses: python-semantic-release/python-semantic-release@master
      with:
        changelog: "false"
        vcs-release: "true"
        github_token: ${{ secrets.GITHUB_TOKEN }}
          