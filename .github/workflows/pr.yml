name: Pull Request - Lint and Test Workflow

on: [pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
    
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key:  ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e  .[dev,deploy,test]

      - name: Run pre-commit
        run: pre-commit run --all-files
    
  test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
    
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key:  ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev,deploy,test] 
      - name: Launch services
        run: AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}} docker-compose up --build -d stac raster 

      - name: Ingest Stac Items/Collection
        run: |
          pypgstac pgready --dsn postgresql://username:password@0.0.0.0:5432/postgis
          pypgstac load collections .github/workflows/data/noaa-emergency-response.json --dsn postgresql://username:password@0.0.0.0:5432/postgis --method insert_ignore
          pypgstac load items .github/workflows/data/noaa-eri-nashville2020.json --dsn postgresql://username:password@0.0.0.0:5432/postgis --method insert_ignore

      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash

      - name: Integrations tests
        run: python -m pytest .github/workflows/tests/ -vv -s

      - name: Stop services
        run: docker-compose stop