services:
  stac:
    image: ghcr.io/stac-utils/stac-fastapi-pgstac:5.0.0
    environment:
      APP_HOST: 0.0.0.0
      APP_PORT: 8001
      RELOAD: true
      ENVIRONMENT: local
      POSTGRES_USER: username
      POSTGRES_PASS: password
      POSTGRES_DBNAME: postgis
      POSTGRES_HOST_READER: database
      POSTGRES_HOST_WRITER: database
      POSTGRES_PORT: 5432
      WEB_CONCURRENCY: 10
      VSI_CACHE: TRUE
      GDAL_HTTP_MERGE_CONSECUTIVE_RANGES: YES
      GDAL_DISABLE_READDIR_ON_OPEN: EMPTY_DIR
      DB_MIN_CONN_SIZE: 1
      DB_MAX_CONN_SIZE: 1
      USE_API_HYDRATE: ${USE_API_HYDRATE:-false}
    ports:
      - "8001:8001"
    depends_on:
      - database
    command: bash -c "./scripts/wait-for-it.sh database:5432 && python -m stac_fastapi.pgstac.app"

  database:
    image: ghcr.io/stac-utils/pgstac:v0.9.5
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgis
      PGUSER: username
      PGPASSWORD: password
      PGDATABASE: postgis
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:5439:5432"
    command: postgres -N 500
    volumes:
      - ./.pgdata:/var/lib/postgresql/data

  proxy:
    depends_on:
      - stac
    build:
      context: .
    environment:
      UPSTREAM_URL: ${UPSTREAM_URL:-http://stac:8001}
      OIDC_DISCOVERY_URL: ${OIDC_DISCOVERY_URL:-http://oidc:8888/.well-known/openid-configuration}
      OIDC_DISCOVERY_INTERNAL_URL: ${OIDC_DISCOVERY_INTERNAL_URL:-http://oidc:8888/.well-known/openid-configuration}
    env_file:
      - path: .env
        required: false
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src

  oidc:
    image: ghcr.io/alukach/mock-oidc-server:latest
    environment:
      ISSUER: http://localhost:8888
      SCOPES: item:create,item:update,item:delete,collection:create,collection:update,collection:delete
      PORT: 8888
    ports:
      - "8888:8888"

networks:
  default:
    name: eoapi-network
